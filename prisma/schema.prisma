 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id               Int         @id @default(autoincrement())
  email            String      @unique
  name             String
  password         String
  confirmationCode String?
  status           String? 
  identification   String?
  roleId           Int
  companyId        Int
  orders           order[]
  company          company     @relation(fields: [companyId], references: [id]) 
  role             role        @relation(fields: [roleId], references: [id]) 
  activatedAt      DateTime? 
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
} 

model role {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  permissions role_permission[]
  user        user[]
}

model permission {
  id    Int               @id @default(autoincrement())
  name  String            @unique
  roles role_permission[]
}

model company {
  id    Int               @id @default(autoincrement())
  name  String           
  slug  String       
  users user[]    
  cnpj  String?           
}



model order {
  id     Int               @id @default(autoincrement())
  userId Int               @unique            
  clientId Int 
  client   client          @relation(fields: [clientId], references: [id])                    
  user     user            @relation(fields: [userId], references: [id])                    
  discount Float?                     
  products Json
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}


model client {
  id        Int               @id @default(autoincrement())
  name      String                        
  identification String?                     
  telephone String?                     
  address  Float?   
  orders   order[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}


 
model product {
  id         Int        @id @default(autoincrement())
  name       String
  slug       String?
  value      Float?
  lang       String?
  ean        String?
  picture    String?
  estoque    Int
  categoryId Int
  category   category   @relation(fields: [categoryId], references: [id])
  status     Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model category {
  id        Int       @id @default(autoincrement())
  slug      String
  name      String
  lang      String
  products  product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

 
 
model email_template {
  id          Int      @id @default(autoincrement())
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model language {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model role_permission {
  roleId       Int
  role         role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permissionId Int
  permission   permission @relation(fields: [permissionId], references: [id], onDelete: Cascade) 
  @@id([roleId, permissionId])
}
 